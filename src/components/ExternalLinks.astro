---
export type ExtLink = {
	href: string;
	img?: string;
	img_alt?: string;
	name: string;
	isMutual?: boolean;
};
export interface Props {
	links: ExtLink[];
	comment_mutual?: string;
	comment_fav?: string;
}

const {
	comment_mutual = "相互(ありがとうございます)",
	comment_fav = "お気に入り",
} = Astro.props;

const formed_links: (string | ExtLink)[] = ((links) => {
	const result: (string | ExtLink)[] = new Array();
	const mutuals = links.filter((link) => link.isMutual);
	const favorites = links.filter((link) => !link.isMutual);
	mutuals.length > 0 && result.push(comment_mutual);
	mutuals.forEach((link) => result.push(link));
	favorites.length > 0 && result.push(comment_fav);
	favorites.forEach((link) => result.push(link));
	return result;
})(Astro.props.links);
---

<div class="external-links">
	{
		formed_links.map((e) => {
			if (typeof e === "string") {
				return <div style="margin: 10px 0 0 0; ">{e}</div>;
			} else if (e.img) {
				return (
					<li>
						<a href={e.href} style="font-size: small;">
							{e.name} <br />
							<img src={e.img} alt={e.img_alt || e.name} />
						</a>
					</li>
				);
			} else {
				return (
					<li style="padding: 15px 0;">
						<a
							style="font-size: 95%; padding: 2px; border-bottom: dotted 4px darkgray;"
							href={e.href}
						>
							{e.name}
						</a>
					</li>
				);
			}
		})
	}
</div>

<style>
	.external-links {
		margin: 20px 0;
	}
	.external-links ul {
		margin: 0;
		padding: 0;
	}
	.external-links li {
		list-style-type: none;
	}
	.external-links img {
		margin: 0;
	}
</style>
